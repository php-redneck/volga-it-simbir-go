// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/Account/Me": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Получение данных о текущем аккаунте",
                "tags": [
                    "AccountController"
                ],
                "summary": "Получение данных о текущем аккаунте",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entities.User"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/Account/SignIn": {
            "post": {
                "description": "Авторизация пользователя",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AccountController"
                ],
                "summary": "Получение нового jwt токена пользователя",
                "parameters": [
                    {
                        "description": "Параметры запроса",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.SignInDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Токен",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responders.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/Account/SignOut": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Выход из аккаунта",
                "tags": [
                    "AccountController"
                ],
                "summary": "Выход из аккаунта",
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/Account/SignUp": {
            "post": {
                "description": "Регистрация пользователя",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AccountController"
                ],
                "summary": "Регистрация нового аккаунта",
                "parameters": [
                    {
                        "description": "Параметры запроса",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.SignUpDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Токен",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responders.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/Account/Update": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Обновление своего аккаунта",
                "tags": [
                    "AccountController"
                ],
                "summary": "Обновление своего аккаунта",
                "parameters": [
                    {
                        "description": "Параметры запроса",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.AccountUpdateDTO"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/Admin/Account": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Получение списка всех аккаунтов",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AdminAccountController"
                ],
                "summary": "Получение списка всех аккаунтов",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Начало выборки",
                        "name": "start",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Размер выборки",
                        "name": "count",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/responders.PaginationResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "payload": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/entities.User"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responders.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Создание администратором нового аккаунта",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AdminAccountController"
                ],
                "summary": "Создание администратором нового аккаунта",
                "parameters": [
                    {
                        "description": "Параметры запроса",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateUserDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/entities.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responders.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/Admin/Account/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Получение информации об аккаунте по id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AdminAccountController"
                ],
                "summary": "Получение информации об аккаунте по id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Id пользователя",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entities.User"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Изменение администратором аккаунта по id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AdminAccountController"
                ],
                "summary": "Изменение администратором аккаунта по id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Id пользователя",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Параметры запроса",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.EditUserDTO"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responders.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Удаление аккаунта по id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AdminAccountController"
                ],
                "summary": "Удаление аккаунта по id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Id пользователя",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/Admin/Rent": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Получение списка всех аккаунтов",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AdminRentController"
                ],
                "summary": "Получение списка всех аккаунтов",
                "responses": {
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Получение списка всех аккаунтов",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AdminRentController"
                ],
                "summary": "Получение списка всех аккаунтов",
                "responses": {
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/Admin/Rent/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Получение списка всех аккаунтов",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AdminRentController"
                ],
                "summary": "Получение списка всех аккаунтов",
                "responses": {
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Получение списка всех аккаунтов",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AdminRentController"
                ],
                "summary": "Получение списка всех аккаунтов",
                "responses": {
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Получение списка всех аккаунтов",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AdminRentController"
                ],
                "summary": "Получение списка всех аккаунтов",
                "responses": {
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/Admin/Transport": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Получение списка всех транспортных средств",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AdminTransportController"
                ],
                "summary": "Получение списка всех транспортных средств",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Начало выборки",
                        "name": "start",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Размер выборки",
                        "name": "count",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Тип транспорта [Car, Bike, Scooter, All]",
                        "name": "transportType",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responders.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Создание нового транспортного средства",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AdminTransportController"
                ],
                "summary": "Создание нового транспортного средства",
                "parameters": [
                    {
                        "description": "Параметры запроса",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.AdminTransportDTO"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responders.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/Admin/Transport/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Получение информации о транспортном средстве по id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AdminTransportController"
                ],
                "summary": "Получение информации о транспортном средстве по id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Id транспорта",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Изменение транспортного средства по id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AdminTransportController"
                ],
                "summary": "Изменение транспортного средства по id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Id пользователя",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Параметры запроса",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.AdminTransportDTO"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responders.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Удаление транспорта по id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AdminTransportController"
                ],
                "summary": "Удаление транспорта по id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Id транспорта",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/Payment/Hesoyam/{accountId}": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Администратор может добавить баланс всем, обычный пользователь только себе",
                "tags": [
                    "PaymentController"
                ],
                "summary": "Добавляет на баланс аккаунта с id={accountId} 250 000 денежных единиц.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID пользователя, если отправляет не администратор, то поле игонируется",
                        "name": "accountId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/Transport": {
            "post": {
                "description": "Получение информации о транспорте по id",
                "tags": [
                    "TransportController"
                ],
                "summary": "Получение информации о транспорте по id",
                "responses": {}
            }
        },
        "/api/Transport/{id}": {
            "get": {
                "description": "Получение информации о транспорте по id",
                "tags": [
                    "TransportController"
                ],
                "summary": "Получение информации о транспорте по id",
                "responses": {}
            },
            "put": {
                "description": "Получение информации о транспорте по id",
                "tags": [
                    "TransportController"
                ],
                "summary": "Получение информации о транспорте по id",
                "responses": {}
            },
            "delete": {
                "description": "Получение информации о транспорте по id",
                "tags": [
                    "TransportController"
                ],
                "summary": "Получение информации о транспорте по id",
                "responses": {}
            }
        }
    },
    "definitions": {
        "dto.AccountUpdateDTO": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "username": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                }
            }
        },
        "dto.AdminTransportDTO": {
            "type": "object",
            "properties": {
                "canBeRented": {
                    "type": "boolean"
                },
                "color": {
                    "type": "string"
                },
                "dayPrice": {
                    "type": "number"
                },
                "description": {
                    "type": "string"
                },
                "identifier": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "minutePrice": {
                    "type": "number"
                },
                "model": {
                    "type": "string"
                },
                "ownerId": {
                    "type": "integer"
                },
                "transportType": {
                    "type": "string"
                }
            }
        },
        "dto.CreateUserDTO": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "balance": {
                    "type": "number"
                },
                "isAdmin": {
                    "type": "boolean"
                },
                "password": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "username": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                }
            }
        },
        "dto.EditUserDTO": {
            "type": "object",
            "properties": {
                "balance": {
                    "type": "number"
                },
                "isAdmin": {
                    "type": "boolean"
                },
                "password": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "username": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                }
            }
        },
        "dto.SignInDTO": {
            "type": "object",
            "required": [
                "login",
                "password"
            ],
            "properties": {
                "login": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "password": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                }
            }
        },
        "dto.SignUpDTO": {
            "type": "object",
            "required": [
                "login",
                "password"
            ],
            "properties": {
                "login": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "password": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                }
            }
        },
        "entities.User": {
            "type": "object",
            "properties": {
                "balance": {
                    "type": "number"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "isAdmin": {
                    "type": "boolean"
                },
                "updated_at": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "responders.BadRequestResponse": {
            "type": "object",
            "properties": {
                "errors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "responders.PaginationMeta": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "countRecords": {
                    "type": "integer"
                },
                "start": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "responders.PaginationResponse": {
            "type": "object",
            "properties": {
                "meta": {
                    "$ref": "#/definitions/responders.PaginationMeta"
                },
                "payload": {
                    "type": "array",
                    "items": {}
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
